library(dplyr)
temp <- tempfile()
zipfile  <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(zipfile,temp)
dta_raw <- read.csv(unz(temp, "activity.csv"))
unlink(temp)
## Convert date variable from factor to date
dta_raw$date <- as.Date(dta_raw$date)
## Sum total steps for each date
steps_date <- aggregate(dta_raw$steps, by=list(date=dta_raw$date), FUN=sum)
hist(steps_date$x, main="Histogram of steps taken per day", xlab="Steps", col="blue")
meansteps <- round(mean(steps_date$x,na.rm=TRUE),4)
mediansteps <- median(steps_date$x,na.rm=TRUE)
## Time series plot of the average number of steps taken
steps_time <- aggregate(dta_raw$steps, by=list(interval=dta_raw$interval), FUN=mean, na.rm=TRUE)
plot(steps_time$interval,steps_time$x,type="l",main="Mean steps by time interval", xlab="time interval",ylab="mean steps")
intervalmax <- steps_time[steps_time$x==max(steps_time$x),1]
## for imputing missing data, loop over each time interval, calculate median value from nonmissing results, and replace missing values with median.
## Calculate and report the total number of missing values in the dataset
navals <- sum(is.na(dta_raw$steps))
## generate list of median values for imputation
med_impute <- aggregate(dta_raw$steps, by=list(interval=dta_raw$interval), FUN=median, na.rm=TRUE)
dta_impute <- dta_raw
for(i in 1:nrow(dta_impute)){
if(is.na(dta_impute$steps[i])) {
dta_impute$steps[i] <- med_impute$x[match(dta_impute$interval[i], med_impute$interval)]
}
}
## Sum total steps for each date
steps_date_imp <- aggregate(dta_impute$steps, by=list(date=dta_impute$date), FUN=sum)
hist(steps_date_imp$x, main="Histogram of steps taken per day after missing values imputed", xlab="Steps", col="blue")
meansteps_imp <- mean(steps_date_imp$x,na.rm=TRUE)
mediansteps_imp <- median(steps_date_imp$x,na.rm=TRUE)
## Time series plot of the average number of steps taken at weekdays and weekends
## Add variable giving weekday or weekend
library(dplyr)
dta_week <-
dta_impute %>%
mutate(daynum = as.POSIXlt(dta_week$date)$wday) %>%
mutate(day = if_else(daynum==0 | daynum==6,"weekend",
if_else((daynum>0 & daynum<6), "week", )))
## Time series plot of the average number of steps taken at weekdays and weekends
## Add variable giving weekday or weekend
library(dplyr)
dta_week <-
dta_impute %>%
mutate(daynum = as.POSIXlt(dta_week$date)$wday) %>%
mutate(day = if_else(daynum==0 | daynum==6,"weekend",
if_else((daynum>0 & daynum<6), "week", NA_real_ )))
## Time series plot of the average number of steps taken at weekdays and weekends
## Add variable giving weekday or weekend
library(dplyr)
dta_week <-
dta_impute %>%
mutate(daynum = as.POSIXlt(dta_week$date)$wday) %>%
mutate(day = if_else(daynum==0 | daynum==6,"weekend",
if_else((daynum>0 & daynum<6), "week", NA )))
## Time series plot of the average number of steps taken at weekdays and weekends
## Add variable giving weekday or weekend
library(dplyr)
dta_week <-
dta_impute %>%
mutate(daynum = as.POSIXlt(dta_week$date)$wday) %>%
mutate(day = if_else(daynum==0 | daynum==6,"weekend",
if_else((daynum>0 & daynum<6), "week", "unknown" )))
steps_time <- aggregate(dta_raw$steps, by=list(interval=dta_raw$interval), FUN=mean, na.rm=TRUE)
plot(steps_time$interval,steps_time$x,type="l",main="Mean steps by time interval", xlab="time interval",ylab="mean steps")
intervalmax <- steps_time[steps_time$x==max(steps_time$x),1]
## Time series plot of the average number of steps taken at weekdays and weekends
## Add variable giving weekday or weekend
library(dplyr)
dta_week <-
dta_impute %>%
mutate(daynum = as.POSIXlt(dta_week$date)$wday) %>%
mutate(day = if_else(daynum==0 | daynum==6,"weekend",
if_else((daynum>0 & daynum<6), "week", "unknown" ))) %>%
group_by(day) %>%
steps_group <- aggregate(dta_raw$steps, by=list(interval=dta_raw$interval), FUN=mean, na.rm=TRUE)
## Time series plot of the average number of steps taken at weekdays and weekends
## Add variable giving weekday or weekend
library(dplyr)
dta_week <-
dta_impute %>%
mutate(daynum = as.POSIXlt(dta_week$date)$wday) %>%
mutate(day = if_else(daynum==0 | daynum==6,"weekend",
if_else((daynum>0 & daynum<6), "week", "unknown" ))) %>%
group_by(day)
steps_group <- aggregate(dta_raw$steps, by=list(interval=dta_raw$interval), FUN=mean, na.rm=TRUE)
plot(steps_time$interval,steps_time$x,type="l",main="Mean steps by time interval", xlab="time interval",ylab="mean steps")
intervalmax <- steps_time[steps_time$x==max(steps_time$x),1]
?weekdays
## Time series plot of the average number of steps taken at weekdays and weekends
## Add variable giving weekday or weekend
library(dplyr)
dta_week <-
dta_impute %>%
mutate(daynum = as.POSIXlt(dta_week$date)$wday) %>%
mutate(day = if_else(daynum==0 | daynum==6,"weekend",
if_else((daynum>0 & daynum<6), "week", "unknown" )))
dta_week$day <- as.factor(dta_week$day)
View(dta_week)
## Time series plot of the average number of steps taken at weekdays and weekends
## Add variable giving weekday or weekend
library(dplyr)
dta_week <-
dta_impute %>%
mutate(daynum = as.POSIXlt(dta_week$date)$wday) %>%
transmute(day = if_else(daynum==0 | daynum==6,"weekend",
if_else((daynum>0 & daynum<6), "week", "unknown" )))
dta_week$day <- as.factor(dta_week$day)
View(dta_week)
## Time series plot of the average number of steps taken at weekdays and weekends
## Add variable giving weekday or weekend
library(dplyr)
dta_week <-
dta_impute %>%
mutate(day = as.POSIXlt(dta_week$date)$wday) %>%
mutate(day = if_else(daynum==0 | daynum==6,"weekend",
if_else((daynum>0 & daynum<6), "week", "unknown" )))
## Time series plot of the average number of steps taken at weekdays and weekends
## Add variable giving weekday or weekend
library(dplyr)
dta_week <-
dta_impute %>%
mutate(day = as.POSIXlt(dta_week$date)$wday) %>%
mutate(day = if_else(day==0 | day==6,"weekend",
if_else((day>0 & day<6), "week", "unknown" )))
## Time series plot of the average number of steps taken at weekdays and weekends
## Add variable giving weekday or weekend
library(dplyr)
dta_week <-
dta_impute %>%
mutate(daynum = as.POSIXlt(dta_week$date)$wday) %>%
mutate(as.factor(day = if_else(daynum==0 | daynum==6,"weekend",
if_else((daynum>0 & daynum<6), "week", "unknown" ))))
## Time series plot of the average number of steps taken at weekdays and weekends
## Add variable giving weekday or weekend
library(dplyr)
dta_week <-
dta_impute %>%
mutate(daynum = as.POSIXlt(dta_week$date)$wday) %>%
mutate(day = if_else(daynum==0 | daynum==6,"weekend",
if_else((daynum>0 & daynum<6), "week", "unknown" )))
library(dplyr)
temp <- tempfile()
zipfile  <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(zipfile,temp)
dta_raw <- read.csv(unz(temp, "activity.csv"))
unlink(temp)
## Convert date variable from factor to date
dta_raw$date <- as.Date(dta_raw$date)
## Sum total steps for each date
steps_date <- aggregate(dta_raw$steps, by=list(date=dta_raw$date), FUN=sum)
hist(steps_date$x, main="Histogram of steps taken per day", xlab="Steps", col="blue")
meansteps <- round(mean(steps_date$x,na.rm=TRUE),4)
mediansteps <- median(steps_date$x,na.rm=TRUE)
## Time series plot of the average number of steps taken
steps_time <- aggregate(dta_raw$steps, by=list(interval=dta_raw$interval), FUN=mean, na.rm=TRUE)
plot(steps_time$interval,steps_time$x,type="l",main="Mean steps by time interval", xlab="time interval",ylab="mean steps")
intervalmax <- steps_time[steps_time$x==max(steps_time$x),1]
## for imputing missing data, loop over each time interval, calculate median value from nonmissing results, and replace missing values with median.
## Calculate and report the total number of missing values in the dataset
navals <- sum(is.na(dta_raw$steps))
## generate list of median values for imputation
med_impute <- aggregate(dta_raw$steps, by=list(interval=dta_raw$interval), FUN=median, na.rm=TRUE)
dta_impute <- dta_raw
for(i in 1:nrow(dta_impute)){
if(is.na(dta_impute$steps[i])) {
dta_impute$steps[i] <- med_impute$x[match(dta_impute$interval[i], med_impute$interval)]
}
}
## Sum total steps for each date
steps_date_imp <- aggregate(dta_impute$steps, by=list(date=dta_impute$date), FUN=sum)
hist(steps_date_imp$x, main="Histogram of steps taken per day after missing values imputed", xlab="Steps", col="blue")
meansteps_imp <- mean(steps_date_imp$x,na.rm=TRUE)
mediansteps_imp <- median(steps_date_imp$x,na.rm=TRUE)
## Time series plot of the average number of steps taken at weekdays and weekends
## Add variable giving weekday or weekend
library(dplyr)
dta_week <-
dta_impute %>%
mutate(daynum = as.POSIXlt(dta_week$date)$wday) %>%
mutate(day = if_else(daynum==0 | daynum==6,"weekend",
if_else((daynum>0 & daynum<6), "week", "unknown" )))
## Time series plot of the average number of steps taken at weekdays and weekends
## Add variable giving weekday or weekend
library(dplyr)
dta_week <-
dta_impute %>%
mutate(daynum = as.POSIXlt(date)$wday) %>%
mutate(day = if_else(daynum==0 | daynum==6,"weekend",
if_else((daynum>0 & daynum<6), "week", "unknown" )))
## Time series plot of the average number of steps taken at weekdays and weekends
## Add variable giving weekday or weekend
library(dplyr)
dta_week <-
dta_impute %>%
mutate(daynum = as.POSIXlt(date)$wday) %>%
transmute(day = if_else(daynum==0 | daynum==6,"weekend",
if_else((daynum>0 & daynum<6), "week", "unknown" )))
## Time series plot of the average number of steps taken at weekdays and weekends
## Add variable giving weekday or weekend
library(dplyr)
dta_impute$day <-
dta_impute %>%
mutate(daynum = as.POSIXlt(date)$wday) %>%
transmute(day = if_else(daynum==0 | daynum==6,"weekend",
if_else((daynum>0 & daynum<6), "week", "unknown" )))
## Time series plot of the average number of steps taken at weekdays and weekends
## Add variable giving weekday or weekend
library(dplyr)
dta_week <-
dta_impute %>%
mutate(daynum = as.POSIXlt(date)$wday) %>%
mutate(as.factor(day = if_else(daynum==0 | daynum==6,"weekend",
if_else((daynum>0 & daynum<6), "week", "unknown" ))))
## Time series plot of the average number of steps taken at weekdays and weekends
## Add variable giving weekday or weekend
library(dplyr)
dta_week <-
dta_impute %>%
mutate(daynum = as.POSIXlt(date)$wday) %>%
mutate(day = if_else(daynum==0 | daynum==6,"weekend",
if_else((daynum>0 & daynum<6), "week", "unknown" )))
## Time series plot of the average number of steps taken at weekdays and weekends
## Add variable giving weekday or weekend
library(dplyr)
dta_week <-
dta_impute %>%
mutate(daynum = as.POSIXlt(date)$wday) %>%
mutate(day = if_else(daynum==0 | daynum==6,"weekend",
if_else((daynum>0 & daynum<6), "week", "unknown" )))
dta_week$day <- as.factor(dta_week$day)
View(dta_week)
## Time series plot of the average number of steps taken at weekdays and weekends
## Add variable giving weekday or weekend
library(dplyr)
dta_week <-
dta_impute %>%
mutate(daynum = as.POSIXlt(date)$wday) %>%
mutate(day = if_else(daynum==0 | daynum==6,"weekend",
if_else((daynum>0 & daynum<6), "week", "unknown" )))
dta_week$day <- as.factor(dta_week$day)
steps_time_wk <- aggregate(dta_week$steps, by=list(wkdy=dta_week$day,interval=dta_week$interval), FUN=mean, na.rm=TRUE)
plot(steps_time_wk$interval,steps_time_wk$x,type="l",main="Mean steps by time interval", xlab="time interval",ylab="mean steps")
intervalmax <- steps_time[steps_time_wk$x==max(steps_time$x),1]
## Time series plot of the average number of steps taken at weekdays and weekends
## Add variable giving weekday or weekend
library(dplyr)
dta_week <-
dta_impute %>%
mutate(daynum = as.POSIXlt(date)$wday) %>%
mutate(day = if_else(daynum==0 | daynum==6,"weekend",
if_else((daynum>0 & daynum<6), "week", "unknown" )))
dta_week$day <- as.factor(dta_week$day)
steps_time_wk <- aggregate(dta_week$steps, by=list(wkdy=dta_week$day,interval=dta_week$interval), FUN=mean, na.rm=TRUE)
plot(steps_time_wk$interval~wkdy,steps_time_wk$x,type="l",main="Mean steps by time interval", xlab="time interval",ylab="mean steps")
## Time series plot of the average number of steps taken at weekdays and weekends
## Add variable giving weekday or weekend
library(dplyr)
dta_week <-
dta_impute %>%
mutate(daynum = as.POSIXlt(date)$wday) %>%
mutate(day = if_else(daynum==0 | daynum==6,"weekend",
if_else((daynum>0 & daynum<6), "week", "unknown" )))
dta_week$day <- as.factor(dta_week$day)
steps_time_wk <- aggregate(dta_week$steps, by=list(wkdy=dta_week$day,interval=dta_week$interval), FUN=mean, na.rm=TRUE)
plot(steps_time_wk$interval~steps_time_wk$wkdy,steps_time_wk$x,type="l",main="Mean steps by time interval", xlab="time interval",ylab="mean steps")
## Time series plot of the average number of steps taken at weekdays and weekends
## Add variable giving weekday or weekend
library(dplyr)
dta_week <-
dta_impute %>%
mutate(daynum = as.POSIXlt(date)$wday) %>%
mutate(day = if_else(daynum==0 | daynum==6,"weekend",
if_else((daynum>0 & daynum<6), "week", "unknown" )))
dta_week$day <- as.factor(dta_week$day)
steps_time_wk <- aggregate(dta_week$steps, by=list(wkdy=dta_week$day,interval=dta_week$interval), FUN=mean, na.rm=TRUE)
plot(steps_time_wk$interval,steps_time_wk$x,type="l",col=wkdy,main="Mean steps by time interval", xlab="time interval",ylab="mean steps")
## Time series plot of the average number of steps taken at weekdays and weekends
## Add variable giving weekday or weekend
library(dplyr)
dta_week <-
dta_impute %>%
mutate(daynum = as.POSIXlt(date)$wday) %>%
mutate(day = if_else(daynum==0 | daynum==6,"weekend",
if_else((daynum>0 & daynum<6), "week", "unknown" )))
dta_week$day <- as.factor(dta_week$day)
steps_time_wk <- aggregate(dta_week$steps, by=list(wkdy=dta_week$day,interval=dta_week$interval), FUN=mean, na.rm=TRUE)
plot(steps_time_wk$interval,steps_time_wk$x,type="l",col=steps_time_wk$wkdy,main="Mean steps by time interval", xlab="time interval",ylab="mean steps")
intervalmax <- steps_time[steps_time_wk$x==max(steps_time$x),1]
## Time series plot of the average number of steps taken at weekdays and weekends
## Add variable giving weekday or weekend
library(dplyr)
dta_week <-
dta_impute %>%
mutate(daynum = as.POSIXlt(date)$wday) %>%
mutate(day = if_else(daynum==0 | daynum==6,"weekend",
if_else((daynum>0 & daynum<6), "week", "unknown" )))
dta_week$day <- as.factor(dta_week$day)
steps_time_wk <- aggregate(dta_week$steps, by=list(wkdy=dta_week$day,interval=dta_week$interval), FUN=mean, na.rm=TRUE)
plot(steps_time_wk$interval,steps_time_wk$x,type="l",col=as.numeric(steps_time_wk$wkdy)+1,main="Mean steps by time interval", xlab="time interval",ylab="mean steps")
intervalmax <- steps_time[steps_time_wk$x==max(steps_time$x),1]
## Time series plot of the average number of steps taken at weekdays and weekends
## Add variable giving weekday or weekend
library(dplyr)
dta_week <-
dta_impute %>%
mutate(daynum = as.POSIXlt(date)$wday) %>%
mutate(day = if_else(daynum==0 | daynum==6,"weekend",
if_else((daynum>0 & daynum<6), "week", "unknown" )))
dta_week$day <- as.factor(dta_week$day)
steps_time_wk <- aggregate(dta_week$steps, by=list(wkdy=dta_week$day,interval=dta_week$interval), FUN=mean, na.rm=TRUE)
WEEK = steps_time_wk[steps_time_wk$wkdy == "week", ]
WEEKEND = steps_time_wk[steps_time_wk$wkdy == "weekend", ]
plot(WEEK$interval,WEEK$x,type="l",main="Mean steps by time interval", xlab="time interval",ylab="mean steps")
intervalmax <- steps_time[steps_time_wk$x==max(steps_time$x),1]
## Time series plot of the average number of steps taken at weekdays and weekends
## Add variable giving weekday or weekend
library(dplyr)
dta_week <-
dta_impute %>%
mutate(daynum = as.POSIXlt(date)$wday) %>%
mutate(day = if_else(daynum==0 | daynum==6,"weekend",
if_else((daynum>0 & daynum<6), "week", "unknown" )))
dta_week$day <- as.factor(dta_week$day)
steps_time_wk <- aggregate(dta_week$steps, by=list(wkdy=dta_week$day,interval=dta_week$interval), FUN=mean, na.rm=TRUE)
WEEK = steps_time_wk[steps_time_wk$wkdy == "week", ]
WEEKEND = steps_time_wk[steps_time_wk$wkdy == "weekend", ]
plot(WEEK$interval,WEEK$x,type="l",main="Mean steps by time interval", xlab="time interval",ylab="mean steps")
line((WEEKEND$interval,WEEKEND$x))
## Time series plot of the average number of steps taken at weekdays and weekends
## Add variable giving weekday or weekend
library(dplyr)
dta_week <-
dta_impute %>%
mutate(daynum = as.POSIXlt(date)$wday) %>%
mutate(day = if_else(daynum==0 | daynum==6,"weekend",
if_else((daynum>0 & daynum<6), "week", "unknown" )))
dta_week$day <- as.factor(dta_week$day)
steps_time_wk <- aggregate(dta_week$steps, by=list(wkdy=dta_week$day,interval=dta_week$interval), FUN=mean, na.rm=TRUE)
WEEK = steps_time_wk[steps_time_wk$wkdy == "week", ]
WEEKEND = steps_time_wk[steps_time_wk$wkdy == "weekend", ]
plot(WEEK$interval,WEEK$x,type="l",main="Mean steps by time interval", xlab="time interval",ylab="mean steps")
lines((WEEKEND$interval,WEEKEND$x))
## Time series plot of the average number of steps taken at weekdays and weekends
## Add variable giving weekday or weekend
library(dplyr)
dta_week <-
dta_impute %>%
mutate(daynum = as.POSIXlt(date)$wday) %>%
mutate(day = if_else(daynum==0 | daynum==6,"weekend",
if_else((daynum>0 & daynum<6), "week", "unknown" )))
dta_week$day <- as.factor(dta_week$day)
steps_time_wk <- aggregate(dta_week$steps, by=list(wkdy=dta_week$day,interval=dta_week$interval), FUN=mean, na.rm=TRUE)
WEEK = steps_time_wk[steps_time_wk$wkdy == "week", ]
WEEKEND = steps_time_wk[steps_time_wk$wkdy == "weekend", ]
plot(WEEK$interval,WEEK$x,type="l",main="Mean steps by time interval", xlab="time interval",ylab="mean steps")
lines(WEEKEND$x)
intervalmax <- steps_time[steps_time_wk$x==max(steps_time$x),1]
## Time series plot of the average number of steps taken at weekdays and weekends
## Add variable giving weekday or weekend
library(dplyr)
dta_week <-
dta_impute %>%
mutate(daynum = as.POSIXlt(date)$wday) %>%
mutate(day = if_else(daynum==0 | daynum==6,"weekend",
if_else((daynum>0 & daynum<6), "week", "unknown" )))
dta_week$day <- as.factor(dta_week$day)
steps_time_wk <- aggregate(dta_week$steps, by=list(wkdy=dta_week$day,interval=dta_week$interval), FUN=mean, na.rm=TRUE)
WEEK = steps_time_wk[steps_time_wk$wkdy == "week", ]
WEEKEND = steps_time_wk[steps_time_wk$wkdy == "weekend", ]
plot(WEEK$interval,WEEK$x,type="l",main="Mean steps by time interval", xlab="time interval",ylab="mean steps",col="red")
lines(WEEKEND$x,col="blue")
intervalmax <- steps_time[steps_time_wk$x==max(steps_time$x),1]
## Time series plot of the average number of steps taken at weekdays and weekends
## Add variable giving weekday or weekend
library(dplyr)
dta_week <-
dta_impute %>%
mutate(daynum = as.POSIXlt(date)$wday) %>%
mutate(day = if_else(daynum==0 | daynum==6,"weekend",
if_else((daynum>0 & daynum<6), "week", "unknown" )))
dta_week$day <- as.factor(dta_week$day)
steps_time_wk <- aggregate(dta_week$steps, by=list(wkdy=dta_week$day,interval=dta_week$interval), FUN=mean, na.rm=TRUE)
WEEK = steps_time_wk[steps_time_wk$wkdy == "week", ]
WEEKEND = steps_time_wk[steps_time_wk$wkdy == "weekend", ]
plot(WEEK$interval,WEEK$x,type="n",main="Mean steps by time interval", xlab="time interval",ylab="mean steps")
lines(WEEK$x,col="red")
lines(WEEKEND$x,col="blue")
intervalmax <- steps_time[steps_time_wk$x==max(steps_time$x),1]
## Time series plot of the average number of steps taken at weekdays and weekends
## Add variable giving weekday or weekend
library(dplyr)
dta_week <-
dta_impute %>%
mutate(daynum = as.POSIXlt(date)$wday) %>%
mutate(day = if_else(daynum==0 | daynum==6,"weekend",
if_else((daynum>0 & daynum<6), "week", "unknown" )))
dta_week$day <- as.factor(dta_week$day)
steps_time_wk <- aggregate(dta_week$steps, by=list(wkdy=dta_week$day,interval=dta_week$interval), FUN=mean, na.rm=TRUE)
WEEK = steps_time_wk[steps_time_wk$wkdy == "week", ]
WEEKEND = steps_time_wk[steps_time_wk$wkdy == "weekend", ]
plot(WEEK$interval,WEEK$x,type="n",main="Mean steps by time interval", xlab="time interval",ylab="mean steps")
lines(WEEK$interval,WEEK$x,col="red")
lines(WEEK$interval,WEEKEND$x,col="blue")
intervalmax <- steps_time[steps_time_wk$x==max(steps_time$x),1]
## Time series plot of the average number of steps taken at weekdays and weekends
## Add variable giving weekday or weekend
library(dplyr)
dta_week <-
dta_impute %>%
mutate(daynum = as.POSIXlt(date)$wday) %>%
mutate(day = if_else(daynum==0 | daynum==6,"weekend",
if_else((daynum>0 & daynum<6), "week", "unknown" )))
dta_week$day <- as.factor(dta_week$day)
steps_time_wk <- aggregate(dta_week$steps, by=list(wkdy=dta_week$day,interval=dta_week$interval), FUN=mean, na.rm=TRUE)
WEEK = steps_time_wk[steps_time_wk$wkdy == "week", ]
WEEKEND = steps_time_wk[steps_time_wk$wkdy == "weekend", ]
plot(WEEK$interval,WEEK$x,type="n",main="Mean steps by time interval", xlab="time interval",ylab="mean steps")
lines(WEEK$interval,WEEK$x,col="red")
lines(WEEK$interval,WEEKEND$x,col="blue")
legend("top left", legend=c("Weekday", "Weekend"),
col=c("red", "blue"), lty=1, cex=1)
## Time series plot of the average number of steps taken at weekdays and weekends
## Add variable giving weekday or weekend
library(dplyr)
dta_week <-
dta_impute %>%
mutate(daynum = as.POSIXlt(date)$wday) %>%
mutate(day = if_else(daynum==0 | daynum==6,"weekend",
if_else((daynum>0 & daynum<6), "week", "unknown" )))
dta_week$day <- as.factor(dta_week$day)
steps_time_wk <- aggregate(dta_week$steps, by=list(wkdy=dta_week$day,interval=dta_week$interval), FUN=mean, na.rm=TRUE)
WEEK = steps_time_wk[steps_time_wk$wkdy == "week", ]
WEEKEND = steps_time_wk[steps_time_wk$wkdy == "weekend", ]
plot(WEEK$interval,WEEK$x,type="n",main="Mean steps by time interval", xlab="time interval",ylab="mean steps")
lines(WEEK$interval,WEEK$x,col="red")
lines(WEEK$interval,WEEKEND$x,col="blue")
legend("topleft", legend=c("Weekday", "Weekend"),
col=c("red", "blue"), lty=1, cex=1)
intervalmax <- steps_time[steps_time_wk$x==max(steps_time$x),1]
## Time series plot of the average number of steps taken at weekdays and weekends
## Add variable giving weekday or weekend
library(dplyr)
dta_week <-
dta_impute %>%
mutate(daynum = as.POSIXlt(date)$wday) %>%
mutate(day = if_else(daynum==0 | daynum==6,"weekend",
if_else((daynum>0 & daynum<6), "week", "unknown" )))
dta_week$day <- as.factor(dta_week$day)
steps_time_wk <- aggregate(dta_week$steps, by=list(wkdy=dta_week$day,interval=dta_week$interval), FUN=mean, na.rm=TRUE)
WEEK = steps_time_wk[steps_time_wk$wkdy == "week", ]
WEEKEND = steps_time_wk[steps_time_wk$wkdy == "weekend", ]
library(lattice)
panel.xyplot(dta_week$interval~dta_week$x|dta_week$wkdy)
library(lattice)
xyplot(dta_week$interval ~ dta_week$x | dta_week$wkdy)
xyplot(interval ~ x | wkdy, data=steps_time_wk)
xyplot(x ~ interval | wkdy, data=steps_time_wk)
xyplot(x ~ interval | wkdy, data=steps_time_wk, type="l")
xyplot(x ~ interval | wkdy, data=steps_time_wk, type="l",layout=c(2,1))
xyplot(x ~ interval | wkdy, data=steps_time_wk, type="l",layout=c(1,2))
xyplot(x ~ interval | wkdy, data=steps_time_wk, type="l",layout=c(1,2), main="Mean steps by time interval", xlab="time interval", ylab="mean steps")
library(dplyr)
temp <- tempfile()
zipfile  <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(zipfile,temp)
dta_raw <- read.csv(unz(temp, "activity.csv"))
unlink(temp)
## Convert date variable from factor to date
dta_raw$date <- as.Date(dta_raw$date)
## Sum total steps for each date
steps_date <- aggregate(dta_raw$steps, by=list(date=dta_raw$date), FUN=sum)
hist(steps_date$x, main="Histogram of steps taken per day", xlab="Steps", col="blue")
meansteps <- round(mean(steps_date$x,na.rm=TRUE),4)
mediansteps <- median(steps_date$x,na.rm=TRUE)
## Time series plot of the average number of steps taken
steps_time <- aggregate(dta_raw$steps, by=list(interval=dta_raw$interval), FUN=mean, na.rm=TRUE)
plot(steps_time$interval,steps_time$x,type="l",main="Mean steps by time interval", xlab="time interval",ylab="mean steps")
intervalmax <- steps_time[steps_time$x==max(steps_time$x),1]
## for imputing missing data, loop over each time interval, calculate median value from nonmissing results, and replace missing values with median.
## Calculate and report the total number of missing values in the dataset
navals <- sum(is.na(dta_raw$steps))
## generate list of median values for imputation
med_impute <- aggregate(dta_raw$steps, by=list(interval=dta_raw$interval), FUN=median, na.rm=TRUE)
dta_impute <- dta_raw
for(i in 1:nrow(dta_impute)){
if(is.na(dta_impute$steps[i])) {
dta_impute$steps[i] <- med_impute$x[match(dta_impute$interval[i], med_impute$interval)]
}
}
## Sum total steps for each date
steps_date_imp <- aggregate(dta_impute$steps, by=list(date=dta_impute$date), FUN=sum)
hist(steps_date_imp$x, main="Histogram of steps taken per day after missing values imputed", xlab="Steps", col="blue")
meansteps_imp <- mean(steps_date_imp$x,na.rm=TRUE)
mediansteps_imp <- median(steps_date_imp$x,na.rm=TRUE)
## Time series plot of the average number of steps taken at weekdays and weekends
## Add variable giving weekday or weekend
library(dplyr)
dta_week <-
dta_impute %>%
mutate(daynum = as.POSIXlt(date)$wday) %>%
mutate(day = if_else(daynum==0 | daynum==6,"weekend",
if_else((daynum>0 & daynum<6), "week", "unknown" )))
dta_week$day <- as.factor(dta_week$day)
steps_time_wk <- aggregate(dta_week$steps, by=list(wkdy=dta_week$day,interval=dta_week$interval), FUN=mean, na.rm=TRUE)
WEEK = steps_time_wk[steps_time_wk$wkdy == "week", ]
WEEKEND = steps_time_wk[steps_time_wk$wkdy == "weekend", ]
library(lattice)
xyplot(x ~ interval | wkdy, data=steps_time_wk, type="l",layout=c(1,2), main="Mean steps by time interval", xlab="time interval", ylab="mean steps")
intervalmax <- steps_time[steps_time_wk$x==max(steps_time$x),1]
